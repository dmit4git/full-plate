
user  nginx;
worker_processes  auto;

# error_log  /var/log/nginx/error.log notice;
error_log /dev/stdout info;
pid       /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {

    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

#     log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
#                         '$status $body_bytes_sent "$http_referer" '
#                         '"$http_user_agent" "$http_x_forwarded_for"';

    # access_log  /var/log/nginx/access.log  main;
    access_log /dev/stdout;

    server {

        listen 80;
        server_name ${NGINX_DOMAIN_NAME} www.${NGINX_DOMAIN_NAME};

        location / {
            # react (npm run start)
            proxy_pass http://localhost:3000;
        }

        location /webapi {
            # webapi
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-NginX-Proxy true;
            proxy_set_header OriginHost $host;
            proxy_set_header OriginScheme $scheme;
            proxy_pass http://${NGINX_PROXY_WEBAPI}:10080/webapi;
            # proxy_ssl_session_reuse off;
            # proxy_set_header Host $http_host;
            # proxy_cache_bypass $http_upgrade;
            # proxy_redirect off;
        }

    }

    # graylog
    server {
        listen 80;
        server_name logs.${NGINX_DOMAIN_NAME};
        # ${NGINX_MONITORING_ALLOW}
        # deny all;
        location / {
            proxy_set_header Host $http_host;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Server $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Graylog-Server-URL http://$server_name/;
            proxy_pass http://${NGINX_PROXY_GRAYLOG}:9900;
        }
    }

    # grafana
    server {
        listen 80;
        server_name metrics.${NGINX_DOMAIN_NAME};
        # ${NGINX_MONITORING_ALLOW}
        # deny all;
        location / {
            proxy_set_header Host $http_host;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Server $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Graylog-Server-URL http://$server_name/;
            proxy_pass http://${NGINX_PROXY_GRAFANA}:23000;
        }
    }

    # keycloak
    server {
        listen 80;
        server_name accounts.${NGINX_DOMAIN_NAME};
        # allow ${NGINX_ADMIN_IP};
        # deny all;
        location / {
            # if ($ip_is_not_admin) {
            #     rewrite ^ http://${NGINX_DOMAIN_NAME}/not-allowed break;
            # }
            proxy_pass http://${NGINX_PROXY_KEYCLOAK}:12080;
            proxy_redirect off;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $remote_addr;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Port 80;
            # proxy_ssl_trusted_certificate /own_ca_certs/ca_root_cert.pem;
        }
        # listen 443 ssl;
        # ssl_certificate /etc/letsencrypt/live/${NGINX_DOMAIN_NAME}/fullchain.pem;
        # ssl_certificate_key /etc/letsencrypt/live/${NGINX_DOMAIN_NAME}/privkey.pem;
    }

    # portainer
    server {
        listen 80;
        server_name containers.${NGINX_DOMAIN_NAME};
        # allow ${NGINX_ADMIN_IP};
        # deny all;
        location / {
            # if ($ip_is_not_admin) {
            #     rewrite ^ https://${NGINX_DOMAIN_NAME}/not-allowed break;
            # }
            proxy_pass https://${NGINX_PROXY_PORTAINER}:9000;
            proxy_redirect off;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $remote_addr;
            proxy_set_header X-Forwarded-Proto $scheme;
            # proxy_set_header X-Forwarded-Port 443;
            # proxy_ssl_trusted_certificate /own_ca_certs/ca_root_cert.pem;
            # WebSocket support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
        }
        # listen 443 ssl;
        # ssl_certificate /etc/letsencrypt/live/${NGINX_DOMAIN_NAME}/fullchain.pem;
        # ssl_certificate_key /etc/letsencrypt/live/${NGINX_DOMAIN_NAME}/privkey.pem;
    }

}
