# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
#   * Official Russian Documentation: http://nginx.org/ru/docs/

user nginx;
worker_processes auto;
error_log /dev/stdout notice;
pid /var/run/nginx.pid;

# # Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
# include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {

    # log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                   '$status $body_bytes_sent "$http_referer" '
    #                   '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /dev/stdout;

    sendfile            on;
    tcp_nopush          on;
    keepalive_timeout   65;
    types_hash_max_size 4096;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    # include /etc/nginx/conf.d/*.conf;

    geo $ip_is_not_admin {
        default        1;
        ${NGINX_ADMIN_IP}/32 0;
    }

    server {
        listen [::]:443 ssl ipv6only=on;
        listen 443 ssl default;
        ssl_certificate /etc/letsencrypt/live/${NGINX_DOMAIN_NAME}/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/${NGINX_DOMAIN_NAME}/privkey.pem;
        server_name  ${NGINX_DOMAIN_NAME};

        location / {
            root /usr/share/nginx/webapp;
            try_files $uri $uri/ /index.html;
        }

        location /webapi {
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-NginX-Proxy true;
                proxy_set_header OriginHost $host;
                proxy_set_header OriginScheme $scheme;
                # proxy_pass http://${NGINX_PROXY_WEBAPI}:10080/webapi;
                proxy_pass https://${NGINX_PROXY_WEBAPI}:10443/webapi;
                # proxy_ssl_session_reuse off;
                # proxy_set_header Host $http_host;
                # proxy_cache_bypass $http_upgrade;
                # proxy_redirect off;
        }

        # # Load configuration files for the default server block.
        # include /etc/nginx/default.d/*.conf;

        error_page 404 /404.html;
        location = /404.html { }

        error_page 500 502 503 504 /50x.html;
        location = /50x.html { }
    }

    # graylog
    server {
        server_name logs.${NGINX_DOMAIN_NAME};
        # allow ${NGINX_ADMIN_IP};
        deny all;
        location / {
            if ($ip_is_not_admin) {
                rewrite ^ https://${NGINX_DOMAIN_NAME}/not-allowed break;
            }
            proxy_set_header Host $http_host;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Server $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Graylog-Server-URL http://$server_name/;
            proxy_pass https://${NGINX_PROXY_GRAYLOG}:9900;
            proxy_ssl_trusted_certificate /own_ca_certs/ca_root_cert.pem;
        }
        listen 443 ssl;
        ssl_certificate /etc/letsencrypt/live/${NGINX_DOMAIN_NAME}/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/${NGINX_DOMAIN_NAME}/privkey.pem;
    }

    # grafana
    server {
        server_name metrics.${NGINX_DOMAIN_NAME};
        # allow ${NGINX_ADMIN_IP};
        deny all;
        location / {
            if ($ip_is_not_admin) {
                rewrite ^ https://${NGINX_DOMAIN_NAME}/not-allowed break;
            }
            proxy_set_header Host $http_host;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Server $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_pass https://${NGINX_PROXY_GRAFANA}:23443;
            proxy_ssl_trusted_certificate /own_ca_certs/ca_root_cert.pem;
        }
        listen 443 ssl;
        ssl_certificate /etc/letsencrypt/live/${NGINX_DOMAIN_NAME}/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/${NGINX_DOMAIN_NAME}/privkey.pem;
    }

    # cAdvisor
    server {
        server_name metrics.${NGINX_DOMAIN_NAME};
        allow ${NGINX_ADMIN_IP};
        deny all;
        location / {
            proxy_set_header Host $http_host;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Server $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_pass http://localhost:28080;
        }
        listen 28084 ssl;
        ssl_certificate /etc/letsencrypt/live/${NGINX_DOMAIN_NAME}/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/${NGINX_DOMAIN_NAME}/privkey.pem;
    }

    # node explorer
    server {
        server_name metrics.${NGINX_DOMAIN_NAME};
        allow ${NGINX_ADMIN_IP};
        deny all;
        location / {
            proxy_set_header Host $http_host;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Server $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_pass http://localhost:29100;
        }
        listen 29104 ssl;
        ssl_certificate /etc/letsencrypt/live/${NGINX_DOMAIN_NAME}/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/${NGINX_DOMAIN_NAME}/privkey.pem;
    }

    # keycloak
    server {
        server_name accounts.${NGINX_DOMAIN_NAME};
        # allow ${NGINX_ADMIN_IP};
        deny all;
        location / {
            if ($ip_is_not_admin) {
                rewrite ^ https://${NGINX_DOMAIN_NAME}/not-allowed break;
            }
            proxy_pass https://${NGINX_PROXY_KEYCLOAK}:12443;
            proxy_redirect off;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $remote_addr;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Port 443;
            proxy_ssl_trusted_certificate /own_ca_certs/ca_root_cert.pem;
        }
        listen 443 ssl;
        ssl_certificate /etc/letsencrypt/live/${NGINX_DOMAIN_NAME}/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/${NGINX_DOMAIN_NAME}/privkey.pem;
    }

    # redirect to ${NGINX_DOMAIN_NAME}
    server {
        listen 443 ssl;
        ssl_certificate /etc/letsencrypt/live/${NGINX_DOMAIN_NAME}/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/${NGINX_DOMAIN_NAME}/privkey.pem;
        server_name  www.${NGINX_DOMAIN_NAME};
        return 301 https://${NGINX_DOMAIN_NAME}$request_uri;
        return 404;
    }

    # redirect to https
    server {
        listen       80;
        listen       [::]:80;
        server_name  ${NGINX_DOMAIN_NAME} www.${NGINX_DOMAIN_NAME} logs.${NGINX_DOMAIN_NAME} metrics.${NGINX_DOMAIN_NAME};
        location / {
            return 301 https://$host$request_uri;
        }
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }
        # return 404;
    }

}

