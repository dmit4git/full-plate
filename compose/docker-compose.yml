
version: '3.8'

########## Extension fields ##########

x-logging:
  &graylog-logging
  driver: gelf
  options:
    gelf-address: ${FP_GRAYLOG_GELF_INPUT:-udp://localhost:12201}

########## Services ##########
services:

  ######### Dozzle #########
  dozzle:
    container_name: dozzle
    profiles:
      - dozzle
      - dev
    image: amir20/dozzle:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    network_mode: "host"

  ######### Postgres ##########
  postgres:
    container_name: postgres
    profiles:
      - backend
      - dev
    image: postgres:15.0
    environment:
      - POSTGRES_USER=${FP_POSTGRES_USER:-backend_db_user}
      - POSTGRES_PASSWORD=${FP_POSTGRES_PASSWORD:-changeme}
      - POSTGRES_DB=${FP_POSTGRES_DB:-backend_db}
    volumes:
      - ../postgres/data/webapi:/var/lib/postgresql/data
    network_mode: "host"
    logging: *graylog-logging

  postgres-test:
    container_name: postgres-test
    profiles:
      - dev
      - tests
    image: postgres:15.0
    command: -p 5433
    environment:
      - POSTGRES_USER=${FP_POSTGRES_USER:-backend_db_user}
      - POSTGRES_PASSWORD=${FP_POSTGRES_PASSWORD:-changeme}
      - POSTGRES_DB=${FP_POSTGRES_TEST_DB:-backend_test_db}
    network_mode: "host"
    logging: *graylog-logging

  ########## frontend ##########
  nginx:
    container_name: nginx
    profiles:
      - frontend
    build:
      context: ../webapp
    environment:
      - NGINX_DOMAIN_NAME=${FP_DOMAIN_NAME:-fullplate.local}
      - NGINX_PROXY_WEBAPI=${FP_PROXY_WEBAPI:-localhost}
      - NGINX_PROXY_GRAYLOG=${FP_PROXY_GRAYLOG:-localhost}
      - NGINX_PROXY_GRAFANA=${FP_PROXY_GRAFANA:-localhost}
    volumes:
      - ../nginx/nginx.conf:/etc/nginx/nginx.conf:ro,z
      - ../nginx/templates:/etc/nginx/templates
      - ../nginx/certbot/www/:/var/www/certbot/:ro
      - ../nginx/certbot/letsencrypt/:/etc/letsencrypt/:ro
      - ../nginx/certbot/selfsigned_certs:/selfsigned_certs:ro
    network_mode: "host"
    logging: *graylog-logging

  certbot:
    container_name: certbot
    build:
      context: ../nginx/certbot
    profiles:
      - certbot
    environment:
      - CERTBOT_DOMAIN_NAME=${FP_DOMAIN_NAME:-fullplate.local}
    volumes:
      - ../nginx/certbot/www/:/var/www/certbot/:rw
      - ../nginx/certbot/letsencrypt/:/etc/letsencrypt/:rw
    network_mode: "host"
    logging: *graylog-logging

  nginx-dev:
    container_name: nginx-dev
    profiles:
      - dev
    image: nginx:1.22.0
    volumes:
      - ../nginx/nginx.dev.conf:/etc/nginx/nginx.conf:ro,z
    network_mode: "host"
    logging: *graylog-logging

  ########## backend ##########
  webapi:
    container_name: webapi
    profiles:
      - backend
    image: webapi
    build:
      context: ../webapi
    volumes:
      - ../webapi/data/aspnet:/root/.aspnet
    network_mode: "host"
    depends_on:
      - postgres
    logging: *graylog-logging

  webapi-test: # runs tests
    container_name: webapi-test
    profiles:
      - tests
    image: webapi-test
    build:
      context: ../webapi
      dockerfile: Dockerfile.test
    network_mode: "host"
    depends_on:
      - postgres-test
    logging: *graylog-logging

  ########## graylog ##########
  graylog:
    container_name: graylog
    profiles:
      - graylog
    image: graylog/graylog:5.2
    environment:
      - GRAYLOG_PASSWORD_SECRET=${FP_GRAYLOG_PASSWORD_SECRET:-changeme_minimum_16_characters}
      - GRAYLOG_ROOT_PASSWORD_SHA2=${FP_GRAYLOG_ROOT_PASSWORD_SHA2:-8c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918} # default value is hash of "admin" password
      - GRAYLOG_HTTP_BIND_ADDRESS=0.0.0.0:9900
      - GRAYLOG_HTTP_PUBLISH_URI=http://127.0.0.1:9900/ # https://community.graylog.org/t/accessing-gui-using-internal-and-external-ip/11342/3
      - GRAYLOG_HTTP_EXTERNAL_URI=http://127.0.0.1:9900/
      - GRAYLOG_MONGODB_URI=mongodb://127.0.0.1/graylog
      - GRAYLOG_ELASTICSEARCH_HOSTS=http://127.0.0.1:9200 # fixes "No data nodes have been found"
    volumes:
      - ../graylog/graylog/data:/usr/share/graylog/data
    network_mode: "host"
    depends_on:
      - mongo
      - opensearch
    logging: *graylog-logging

  mongo:
    container_name: mongo
    profiles:
      - graylog
    image: mongo:7.0.4
    volumes:
      - ../graylog/mongo/data:/data/db
    network_mode: "host"
    logging: *graylog-logging

  # https://opensearch.org/docs/latest/install-and-configure/install-opensearch/docker/
  opensearch:
    container_name: opensearch
    profiles:
      - graylog
    image: opensearchproject/opensearch:2.11.1
    environment:
      - discovery.type=single-node
      - plugins.security.disabled=true
      - cluster.name=opensearch-cluster # Name the cluster
      - node.name=opensearch-node-1 # Name the node that will run in this container
      - bootstrap.memory_lock=true # Disable JVM heap memory swapping
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m" # Set min and max JVM heap sizes to at least 50% of system RAM
    volumes:
      - ../graylog/opensearch/data:/usr/share/opensearch/data
    network_mode: "host"
    logging: *graylog-logging

  ########## prometheus ##########
  prometheus:
    image: prom/prometheus:v2.50.0
    container_name: prometheus
    profiles:
      - prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ../prometheus/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ../prometheus/prometheus/data:/prometheus
    depends_on:
      - cadvisor
    network_mode: "host"
    logging: *graylog-logging

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.1
    container_name: cadvisor
    profiles:
      - exporters
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    command:
      - '-port=28080'
    network_mode: "host"
    logging: *graylog-logging

  node_exporter:
    image: quay.io/prometheus/node-exporter:v1.7.0
    container_name: node_exporter
    profiles:
      - exporters
    volumes:
      - '/:/host:ro,rslave'
    command:
      - '--path.rootfs=/host'
      - '--web.listen-address=:29100'
    pid: host
    network_mode: "host"
    logging: *graylog-logging

  grafana:
    image: grafana/grafana-oss:10.2.4
    container_name: grafana
    profiles:
      - prometheus
    volumes:
      - ../prometheus/grafana/data:/var/lib/grafana
    environment:
      - GF_SERVER_HTTP_PORT=23000
    network_mode: "host"
    logging: *graylog-logging
