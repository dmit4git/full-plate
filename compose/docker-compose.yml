
# sudo service docker start
# docker-compose up --build --detach

version: '3.8'

services:

#  ######### Dozzle #########
#  dozzle:
#    container_name: dozzle
#    image: amir20/dozzle:latest
#    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock
#    network_mode: "host"
#  #    ports:
#  #      - "9999:8080"

  ######### Postgres ##########
  postgres:
    image: postgres:15.0
    container_name: postgres
    #    build:
    #      context: ../postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-}
      - POSTGRES_DB=backend_db
    volumes:
      - ../postgres/data:/var/lib/postgresql/data
    network_mode: "host"

  ########## frontend ##########
  nginx:
    container_name: nginx
    image: nginx:1.22.0
    build:
      context: ../webapp
#       args:
#         - REACT_APP_SERVICES_HOST=/webapi
    volumes:
      - ../nginx/nginx.conf:/etc/nginx/nginx.conf:ro,z
    network_mode: "host"
#    ports:
#      - "80:80"
#    networks:
#      - backend
      # - frontend
  
  ########## backend ##########
  webapi:
    container_name: webapi
    image: webapi
    build:
      context: ../webapi
    network_mode: "host"
#    networks:
#      - backend

  ######### Elastic Stack ##########

#  # The 'setup' service runs a one-off script which initializes the
#  # 'logstash_internal' and 'kibana_system' users inside Elasticsearch with the
#  # values of the passwords defined in the '.env' file.
#  #
#  # This task is only performed during the *initial* startup of the stack. On all
#  # subsequent runs, the service simply returns immediately, without performing
#  # any modification to existing users.
#  elastic-setup:
#    container_name: elastic-setup
#    build:
#      context: ../elastic/setup/
#      args:
#        ELASTIC_VERSION: ${ELASTIC_VERSION}
#    init: true
#    volumes:
#      - ../elastic/setup/state:/state:Z
#    environment:
#      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD:-}
#      LOGSTASH_INTERNAL_PASSWORD: ${LOGSTASH_INTERNAL_PASSWORD:-}
#      FILEBEAT_INTERNAL_PASSWORD: ${FILEBEAT_INTERNAL_PASSWORD:-}
#      KIBANA_SYSTEM_PASSWORD: ${KIBANA_SYSTEM_PASSWORD:-}
#    networks:
#      - elastic
#    depends_on:
#      - elasticsearch

#  elasticsearch:
#    container_name: elasticsearch
#    build:
#      context: ../elastic/elasticsearch/
#      args:
#        ELASTIC_VERSION: ${ELASTIC_VERSION}
#    volumes:
#      - ../elastic/elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro,z
#      # - elasticsearch:/usr/share/elasticsearch/data:z
#      - ../elastic/elasticsearch/data:/usr/share/elasticsearch/data:z
#    environment:
#      ES_JAVA_OPTS: -Xms512m -Xmx512m
#      # Bootstrap password.
#      # Used to initialize the keystore during the initial startup of
#      # Elasticsearch. Ignored on subsequent runs.
#      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD:-}
#      # Use single node discovery in order to disable production mode and avoid bootstrap checks.
#      # see: https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
#      discovery.type: single-node
#    network_mode: "host"
##    ports:
##      - "9200:9200"
##      - "9300:9300"
##    networks:
##      - elastic

#  filebeat:
#    container_name: filebeat
#    build:
#      context: ../elastic/filebeat/
#      args:
#        ELASTIC_VERSION: ${ELASTIC_VERSION}
#    user: root
#    command: filebeat -e -strict.perms=false
#    volumes:
#      - ../elastic/filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
#      - /var/lib/docker:/var/lib/docker:ro
#      - /var/run/docker.sock:/var/run/docker.sock
#    network_mode: "host"
##    networks:
##      - elastic
#    depends_on:
#      - elasticsearch

  # logstash:
  #   build:
  #     context: ../elastic/logstash/
  #     args:
  #       ELASTIC_VERSION: ${ELASTIC_VERSION}
  #   volumes:
  #     - ../elastic/logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro,Z
  #     - ../elastic/logstash/pipeline:/usr/share/logstash/pipeline:ro,Z
  #   ports:
  #     - "5044:5044"
  #     - "5000:5000/tcp"
  #     - "5000:5000/udp"
  #     - "9600:9600"
  #   environment:
  #     LS_JAVA_OPTS: -Xms256m -Xmx256m
  #     LOGSTASH_INTERNAL_PASSWORD: ${LOGSTASH_INTERNAL_PASSWORD:-}
  #   networks:
  #     - elastic
  #   depends_on:
  #     - elasticsearch

#  # setup data view: go Stack Management -> Data views, add filebeat-* (index name configured in filebeat.yml)
#  kibana:
#    container_name: kibana
#    build:
#      context: ../elastic/kibana/
#      args:
#        ELASTIC_VERSION: ${ELASTIC_VERSION}
#    volumes:
#      - ../elastic/kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml:ro,Z
#    environment:
#      KIBANA_SYSTEM_PASSWORD: ${KIBANA_SYSTEM_PASSWORD:-}
#    network_mode: "host"
##    ports:
##      - "5601:5601"
##    networks:
##      - elastic
#    depends_on:
#      - elasticsearch


######### volumes #########

# volumes:
#   elastic-setup:
#   elasticsearch:


######### networks #########

#networks:
#  backend:
#  # frontend:
#  elastic:
#    driver: bridge
